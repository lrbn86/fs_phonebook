{"version":3,"sources":["components/SearchFilter.js","components/PersonForm.js","components/NumbersList.js","App.js","index.js"],"names":["SearchFilter","personsArray","setPersons","persons","onChange","event","word","target","value","toLowerCase","filter","person","name","includes","PersonForm","newName","setNewName","newNumber","setNewNumber","onSubmit","preventDefault","some","alert","newPerson","number","concat","push","type","NumbersList","map","key","App","useState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gMAkBeA,EAhBM,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,aAAuBC,GAAiB,EAA1BC,QAA0B,EAAjBD,YAS7C,OACE,yDACoB,2BAAOE,SATR,SAACC,GACpB,IAAMC,EAAQD,EAAME,OAAOC,MAAOC,cAC5BC,EAAST,EAAaS,QAAO,SAAAC,GAAM,OAAIA,EAAOC,KAAKH,cAAcI,SAASP,MAChFJ,EAAWQ,QCkDAI,EAvDI,SAAC,GAAyF,IAAvFb,EAAsF,EAAtFA,aAAcE,EAAwE,EAAxEA,QAASD,EAA+D,EAA/DA,WAAYa,EAAmD,EAAnDA,QAASC,EAA0C,EAA1CA,WAAYC,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,aAqCvF,OACE,oCACE,8CACA,0BAAMC,SAvCQ,SAACd,GAEjB,GADAA,EAAMe,iBACFjB,EAAQkB,MAAK,SAAAV,GAAM,OAAIA,EAAOC,OAASG,KACzCO,MAAM,aAAD,OAAcP,EAAd,2BAGP,GAAgB,KAAZA,EAAJ,CAIA,IAAMQ,EAAY,CAAEX,KAAMG,EAASS,OAAQP,GAa3Cf,EAAWC,EAAQsB,OAAOF,IAC1BtB,EAAayB,KAAKH,GAClBP,EAAW,IACXE,EAAa,SAnBXI,MAAM,2BAiCJ,sCACQ,2BAAOd,MAAOO,EAASX,SAZlB,SAACC,GAClBW,EAAWX,EAAME,OAAOC,WAapB,wCACU,2BAAOA,MAAOS,EAAWb,SAXpB,SAACC,GACpBa,EAAab,EAAME,OAAOC,WAYtB,6BACE,4BAAQmB,KAAK,UAAb,WCrCKC,EAXK,SAAC,GAAiB,IAAfzB,EAAc,EAAdA,QACrB,OACE,oCACE,uCACA,6BACGA,EAAQ0B,KAAI,SAAAlB,GAAM,OAAI,uBAAGmB,IAAKnB,EAAOC,MAAOD,EAAOC,KAA7B,IAAoCD,EAAOa,cCc3DO,EAhBH,SAAC,GAAsB,IAApB9B,EAAmB,EAAnBA,aAAmB,EAEF+B,mBAAS/B,GAFP,mBAEzBE,EAFyB,KAEhBD,EAFgB,OAGF8B,mBAAS,IAHP,mBAGzBjB,EAHyB,KAGhBC,EAHgB,OAIEgB,mBAAS,IAJX,mBAIzBf,EAJyB,KAIdC,EAJc,KAMhC,OACE,oCACE,6CACA,kBAAC,EAAD,CAAcjB,aAAcA,EAAcE,QAASA,EAASD,WAAYA,IACxE,kBAAC,EAAD,CAAYD,aAAcA,EAAcE,QAASA,EAASD,WAAYA,EAAYa,QAASA,EAASC,WAAYA,EAAYC,UAAWA,EAAWC,aAAcA,IAChK,kBAAC,EAAD,CAAaf,QAASA,MCL5B8B,IAASC,OAEP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,CAAKlC,aAVY,CACnB,CAAEW,KAAM,cAAeY,OAAQ,sBAC/B,CAAEZ,KAAM,eAAgBY,OAAQ,qBAChC,CAAEZ,KAAM,cAAeY,OAAQ,sBAC/B,CAAEZ,KAAM,UAAWY,OAAQ,yBAQ3BY,SAASC,eAAe,W","file":"static/js/main.3d70dde5.chunk.js","sourcesContent":["import React from 'react';\n\nconst SearchFilter = ({ personsArray, persons, setPersons }) => {\n\n  const handleFilter = (event) => {\n    const word = (event.target.value).toLowerCase();\n    const filter = personsArray.filter(person => person.name.toLowerCase().includes(word));\n    setPersons(filter);\n  }\n\n\n  return (\n    <>\n      filter shown with <input onChange={handleFilter} />\n    </>\n  );\n}\n\nexport default SearchFilter;\n","import React from 'react';\n\nconst PersonForm = ({ personsArray, persons, setPersons, newName, setNewName, newNumber, setNewNumber }) => {\n  const addPerson = (event) => {\n    event.preventDefault();\n    if (persons.some(person => person.name === newName)) {\n      alert(`The name '${newName}' already exists!`);\n      return;\n    }\n    if (newName === '') {\n      alert('Name cannot be blank!')\n      return;\n    }\n    const newPerson = { name: newName, number: newNumber };\n    // TODO: Holy shit. I spent eons trying to solve this problem.\n    // The problem was that I wanted to keep an original copy of 'persons'\n    // However, setPersons would literally erase other elements after filter.\n    // it does not keep the original copy.\n    // An approach was to use the personsArray.\n    // We would filter out the personsArray instead of 'persons'\n    // Originally, I was going for setPersons(personsArray.concat(newPerson))\n    // but that duplicated added persons. fuck\n    // So after some eons, I realize I could just keep that separately like so:\n    // Note: To prevent duplicate values, do setPersons first and then push\n    // If we pushed first, the personForm would render and push, causing a duplicate element\n    // to splip in.\n    setPersons(persons.concat(newPerson));\n    personsArray.push(newPerson);\n    setNewName('');\n    setNewNumber('');\n  }\n\n  const handleName = (event) => {\n    setNewName(event.target.value);\n  }\n\n  const handleNumber = (event) => {\n    setNewNumber(event.target.value);\n  }\n  return (\n    <>\n      <h2>Add new person</h2>\n      <form onSubmit={addPerson}>\n        <div>\n          name: <input value={newName} onChange={handleName} />\n        </div>\n        <div>\n          number: <input value={newNumber} onChange={handleNumber} />\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n    </>\n  );\n}\n\nexport default PersonForm;\n","import React from 'react';\n\nconst NumbersList = ({ persons }) => {\n  return (\n    <>\n      <h2>Numbers</h2>\n      <div>\n        {persons.map(person => <p key={person.name}>{person.name} {person.number}</p>)}\n      </div>\n    </>\n  );\n}\n\nexport default NumbersList;\n","import React, { useState } from 'react';\nimport SearchFilter from './components/SearchFilter';\nimport PersonForm from './components/PersonForm';\nimport NumbersList from './components/NumbersList';\n\nconst App = ({ personsArray }) => {\n\n  const [persons, setPersons] = useState(personsArray);\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n\n  return (\n    <>\n      <h2>Phonebook App</h2>\n      <SearchFilter personsArray={personsArray} persons={persons} setPersons={setPersons} />\n      <PersonForm personsArray={personsArray} persons={persons} setPersons={setPersons} newName={newName} setNewName={setNewName} newNumber={newNumber} setNewNumber={setNewNumber} />\n      <NumbersList persons={persons} />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nconst personsArray = [\n  { name: 'Arto Hellas', number: '123898102389018203' },\n  { name: 'Ada Lovelace', number: '10239091203901023' },\n  { name: 'Dan Abramov', number: '123918293819203801' },\n  { name: 'brandon', number: '12938918238901238' }\n]\n//const personsArray = [];\nReactDOM.render(\n\n  <React.StrictMode>\n    <App personsArray={personsArray} />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}